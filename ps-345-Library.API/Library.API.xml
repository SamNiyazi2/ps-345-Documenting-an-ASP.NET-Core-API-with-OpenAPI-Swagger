<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library.API</name>
    </assembly>
    <members>
        <member name="M:Library.API.Controllers.AuthorsController.GetAuthor(System.Guid)">
            <summary>
            Get an author by his/her id
            </summary>
            <param name="authorId">The id of the author to get</param>
            <returns>An ActionResult of type Author. NOT visible in Swagger documentation.</returns>
        </member>
        <member name="M:Library.API.Controllers.AuthorsController.UpdateAuthor(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Library.API.Models.AuthorForUpdate})">
            <summary>
            Partially update an author
            </summary>
            <param name="authorId">The id of the author you want to update</param>
            <param name="patchDocument">The set of operations to apply</param>
            <returns>An ActionResult of type Author.  Does not display in API documenation.</returns>
            <remarks>Sample request (this request updates the author's **first name**)   
                PATCH /authors/authorId   
                [   
                     {   
                          "op": "==replace==",   
                          "path": "/afirstname",  
                          "value": **"new first name"**  
                     }  
                ]
              
            </remarks>
        </member>
        <member name="M:Library.API.Controllers.Authors_v2Controller.GetAuthors">
            <summary>
            Get the authors (V2)
            </summary>
            <returns>An ActionResult of type IEnumerable of Author</returns>
            <response code="200">Returns the list of authors</response>
        </member>
        <member name="M:Library.API.Controllers.BooksController.GetBook(System.Guid,System.Guid)">
            <summary>
            Get a book by author Id and book ID 
            </summary>
            <param name="authorId">The id of the author</param>
            <param name="bookId">THe id of the book</param>
            <returns>An ActionResuot of type Book</returns>
            <response code="200">Returns the request book</response>
        </member>
        <member name="M:Library.API.Controllers.BooksController.GetBookWithConcatenatedAuthorName(System.Guid,System.Guid)">
            <summary>
            Get a book by author Id and book ID 
            </summary>
            <param name="authorId">The id of the author</param>
            <param name="bookId">THe id of the book</param>
            <returns>An ActionResuot of type BookWithConcatenatedAuthorName</returns>
            <response code="200">Returns the request book</response>
        </member>
        <member name="T:Library.API.Models.Author">
            <summary>
            An author with id, FirstName and LastName fields
            </summary>
        </member>
        <member name="P:Library.API.Models.Author.Id">
            <summary>
            The author's Id
            </summary>
        </member>
        <member name="P:Library.API.Models.Author.FirstName">
            <summary>
            The author's first name
            </summary>
        </member>
        <member name="P:Library.API.Models.Author.LastName">
            <summary>
            The author's last name
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorForUpdate.FirstName">
            <summary>The firt name of the author</summary>
        </member>
        <member name="P:Library.API.Models.AuthorForUpdate.LastName">
            <summary>
            The last name of the author
            </summary>
        </member>
    </members>
</doc>
